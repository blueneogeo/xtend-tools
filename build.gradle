// SETUP BUILDSCRIPT ///////////////////////////////////////////////////////////
buildscript {
  repositories {
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
    maven {
      url "${artifactory_url}/plugins-release"
      credentials {
        username artifactory_user
        password artifactory_password
      }
    }
  }

  dependencies {
    classpath 'org.xtext:xtext-gradle-plugin:1.0.2'
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.0.3'
  }
}


// CONFIGURE PROJECTS ///////////////////////////////////////////////////
subprojects {
  apply plugin: 'eclipse'
  apply plugin: 'nebula.provided-base'
  apply plugin: 'java'
  apply plugin: 'org.xtext.xtend'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'

  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion

  eclipse.project.name = rootProject.name + '-' + project.name

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "${artifactory_url}/libs-release"
      credentials {
        username artifactory_user
        password artifactory_password
      }
    }
    maven {
      url "${artifactory_url}/libs-snapshot"
      credentials {
        username artifactory_user
        password artifactory_password
      }
    }
  }

  dependencies {
    compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtendVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    testCompile "junit:junit:${junitVersion}"
  }

  task sourcesJar( type: Jar, dependsOn: classes ) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar( type: Jar, dependsOn: javadoc ) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
      }
    }
    repositories {
      maven {
        url "${artifactory_url}/libs-${project.version.endsWith('-SNAPSHOT') ? 'snapshot' : 'release'}-local"
        credentials {
          username artifactory_user
          password artifactory_password
        }
      }
    }
  }

  artifacts {
    archives sourcesJar
    archives javadocJar
  }

  tasks.withType( Jar ) {
    baseName = rootProject.name + '-' + project.name
  }

  tasks.withType(Javadoc) {
    if ( JavaVersion.current().isJava8Compatible() ) {
      options.addStringOption( 'Xdoclint:none', '-quiet' )
    }
  }
}

project( 'core' ) {
  dependencies {
    compile project(":annotations")
    compile 'commons-lang:commons-lang:2.6'
  }
}

project( 'test' ) {
  dependencies {
    compile project( ':core' )
    compile "junit:junit:${junitVersion}"
  }
}
