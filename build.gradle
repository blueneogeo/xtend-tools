// SETUP BUILDSCRIPT ///////////////////////////////////////////////////////////

buildscript {
    repositories {
        maven {
            url "${artifactory_url}/plugins-release"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath 'org.xtend:xtend-gradle-plugin:0.4.7'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
    }
}


// CONFIGURE ALL SUBPROJECTS ///////////////////////////////////////////////////

subprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'org.xtend.xtend'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    sourceCompatibility=javaVersion
    targetCompatibility=javaVersion

    configurations {
        all*.exclude group: 'log4j', module: 'log4j'
        provided {
            dependencies.all { dep ->
                configurations.default.exclude group: dep.group, module: dep.name
            }
        }
        compile.extendsFrom provided
        testCompile.extendsFrom provided
    }

    dependencies {
        compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtendVersion}"
	    compile "org.eclipse.xtext:org.eclipse.xtext.xbase.lib:${xtendVersion}"
    }
    
    eclipse.project.name = "${parent.name}-${name}"

    task install( dependsOn: publishToMavenLocal )
    task export( dependsOn: artifactoryPublish )
    
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
    
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    
    artifactoryPublish {
        dependsOn sourceJar, javadocJar
    }

    tasks.withType(Javadoc) {
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    eclipse.project.name = "${parent.name}-${project.name}"

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId "${parent.name}-${project.name}"
                artifact sourceJar
                artifact javadocJar
                from components.java
                pom.withXml {
                    // Replace runtime to compile
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime'
                    }.each() {
                       it.scope*.value = 'compile'
                    }
                }
            }
        }
    }
}


// SETUP PROJECT SPECIFIC SETTINGS /////////////////////////////////////////////

project( 'core' ) {
    dependencies {
	    compile 'commons-lang:commons-lang:2.6'
	    compile 'ch.qos.logback:logback-classic:1.1.3'
	    compile 'org.slf4j:slf4j-api:1.7.12'
    	testCompile "junit:junit:${junitVersion}"
    }
}

project( 'test' ) {
    dependencies {
        compile project(":core")
        compile "junit:junit:${junitVersion}"
    }
}


// CONFIGURE ARTIFACTORY ///////////////////////////////////////////////////////

artifactory {
    contextUrl = "${artifactory_url}"
    publish {
        repository {
            repoKey = "${artifactory_release_repo}"
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
        defaults {
            publications ('mavenJava')
        }        
    }
    resolve {
        repository {
            repoKey = 'repos'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}
